{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "moduleCreateNetworkInterfaces": {
        "type": "object"
      },
      "customTages": {
        "type": "object"
      },
      "suffixes" : {
        "type": "object"
      }
    },
    "variables": {
        "defaultLocation": "[resourceGroup().location]"
    },
    "resources": [
        {
            "copy" : {
                    "name": "networkInterfaces",
                    "count": "[length(parameters('moduleCreateNetworkInterfaces').nics)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "comments": "Module to create one or more Network Interfaces",
            "apiVersion": "2018-08-01",
            "condition" : "[not(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].aSGName,json('null')))]",
            "name": "[concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].nicName,parameters('suffixes').nicSuffix)]",
            "tags": "[parameters('customTages')]",
            "location": "[if(equals(parameters('moduleCreateNetworkInterfaces').location, json('null')), variables('defaultLocation'), parameters('moduleCreateNetworkInterfaces').location)]",
            "properties": {
                "ipConfigurations": [   
                    { 
                        "name": "[parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].ipConfigName]",
                        "properties": {
                            "privateIPAllocationMethod": "[parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].privateIPAllocationMethod]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].pipName,parameters('suffixes').publicIPSuffix))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].vnetName,parameters('suffixes').vnetSuffix),concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].subnetName,parameters('suffixes').subnetSuffix))]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[if(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].aSGName,json('null')), json('null'),resourceId('Microsoft.Network/applicationSecurityGroups',concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].aSGName,parameters('suffixes').asgSuffix)))]"
                                }
                            ],
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[if(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].backendAddressPoolName,json('null')),json('null'),concat(resourceId('Microsoft.Network/loadBalancers',toLower(concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].lbName,parameters('suffixes').extLoadbalancerSuffix))),'/backendAddressPools/',parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].backendAddressPoolName))]"
                                    
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[if(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].inboundNatRulesname,json('null')),json('null'),concat(resourceId('Microsoft.Network/loadBalancers',toLower(concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].lbName,parameters('suffixes').extLoadbalancerSuffix))),'/inboundNatRules/',parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].inboundNatRulesname))]"
                                }
                            ]
                        }
                    }
                ]
            }
        }
      ], 
      "resources": [
        {
            "copy" : {
                    "name": "networkInterfaces",
                    "count": "[length(parameters('moduleCreateNetworkInterfaces').nics)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "comments": "Module to create one or more Network Interfaces",
            "apiVersion": "2018-08-01",
            "condition" : "[equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].aSGName,json('null'))]",
            "name": "[concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].nicName,parameters('suffixes').nicSuffix)]",
            "tags": "[parameters('customTages')]",
            "location": "[if(equals(parameters('moduleCreateNetworkInterfaces').location, json('null')), variables('defaultLocation'), parameters('moduleCreateNetworkInterfaces').location)]",
            "properties": {
                "ipConfigurations": [   
                    { 
                        "name": "[parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].ipConfigName]",
                        "properties": {
                            "privateIPAllocationMethod": "[parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].privateIPAllocationMethod]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].pipName,parameters('suffixes').publicIPSuffix))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].vnetName,parameters('suffixes').vnetSuffix),concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].subnetName,parameters('suffixes').subnetSuffix))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[if(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].backendAddressPoolName,json('null')),json('null'),concat(resourceId('Microsoft.Network/loadBalancers',toLower(concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].lbName,parameters('suffixes').extLoadbalancerSuffix))),'/backendAddressPools/',parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].backendAddressPoolName))]"
                                    
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[if(equals(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].inboundNatRulesname,json('null')),json('null'),concat(resourceId('Microsoft.Network/loadBalancers',toLower(concat(parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].lbName,parameters('suffixes').extLoadbalancerSuffix))),'/inboundNatRules/',parameters('moduleCreateNetworkInterfaces').nics[copyIndex('networkInterfaces')].inboundNatRulesname))]"
                                }
                            ]
                        }
                    }
                ]
            }
        }
      ],
    "outputs": {
    }
}
