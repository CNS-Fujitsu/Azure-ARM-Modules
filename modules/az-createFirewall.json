{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "moduleCreateFirewalls": {
        "type": "object"
      },
      
      "customTages": {
        "type": "object"
      },
      "suffixes" : {
        "type": "object"
      }
    },
    "variables": {
        "defaultLocation": "[resourceGroup().location]"
    },
    "resources": [
        {
            "copy" : {
                "name": "fws",
                "count": "[length(parameters('moduleCreateFirewalls').firewalls)]"
            },
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Network/azureFirewalls",
            "comments": "Module to create a FW",
            "name": "[concat(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].fwName,parameters('suffixes').fwSuffix)]",
            "tags": "[parameters('customTages')]",
            "location": "[if(equals(parameters('moduleCreateFirewalls').location, json('null')), variables('defaultLocation'), parameters('moduleCreateFirewalls').location)]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                  {
                    "name": "[concat(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].ipconfName)]",
                    "properties" : {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].vnetName,parameters('suffixes').vnetSuffix),concat(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].subnetName,parameters('suffixes').subnetSuffix))]"
                      },
                      "InternalPublicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddressess',concat(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].pipname,parameters('suffixes').publicIPSuffix))]"
                      }
                    }
                  }
                ],
                "copy" : [
                    {
                        "name": "arc",
                        "count": "[length(parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections)]",
                        "input" : {
                            "applicationRuleCollections": [
                                {
                                    "name": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].name]",
                                    "properties": {
                                        "priority":"[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].priority]",
                                        "action": {"type": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].action]"},
                                        "rules": [
                                            {
                                                "name": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].rules.name]",
                                                "protocols": [{"port": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].rules.port]", "protocolType": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].rules.protocolType]"}],
                                                "targetFqdns": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].rules.targetUrl]"],
                                                "sourceAddresses": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].applicationRuleCollections[copyIndex('arc')].rules.sourceAddress]"]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "copy" : [
                    {
                        "name": "nrc",
                        "count": "[length(parameters('moduleCreateFirewalls').firewalls[copyIndex('fws')].networkRuleCollections)]",
                        "input" : {
                            "networkRuleCollections": [
                                {
                                    "name": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].name]",
                                    "properties": {                    
                                        "priority": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].priority]",
                                        "action":  { "type":  "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].action]"},
                                        "rules": [
                                            {
                                                "name": "[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].rules.name]",
                                                "protocols": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].rules.protocol]"],
                                                "sourceAddresses": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].rules.sourceAddress]"],
                                                "destinationAddresses": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].rules.destinationAddress]"],
                                                "destinationPorts": ["[parameters('moduleCreateFirewalls').fireWalls[copyIndex('fws')].networkRuleCollections[copyIndex('nrc')].rules.destinationPort]"]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
    }
}
